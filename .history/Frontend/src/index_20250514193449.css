@tailwind base;
@tailwind components;
@tailwind utilities;

/* Base font declaration */
@font-face {
  font-family: 'All Round Gothic';
  src: url('/fonts/AllRoundGothic.woff2') format('woff2'),
       url('/fonts/AllRoundGothic.woff') format('woff');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'CRashbow';
  src: url('../src/assets/crashbow/Crashbow.otf') format('opentype'),
       url('../src/assets/crashbow/Crashbow.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
  font-display: block;
  font-variation-settings: normal;
}

/* Force font usage with higher specificity */
@layer base {
  html {
    font-family: theme('fontFamily.sans'); /* Use Tailwind's default sans font */
  }
}

/* Add aspect ratio utilities */
@layer utilities {
  .aspect-w-16 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
  }
  .aspect-w-16 > * {
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
  .aspect-w-16 {
    --tw-aspect-w: 16;
  }
  .aspect-h-9 {
    --tw-aspect-h: 9;
  }
}

/* Animation delay utilities */
.animation-delay-2000 {
  animation-delay: 2s;
}
.animation-delay-4000 {
  animation-delay: 4s;
}

/* Moving streak animations */
@keyframes moveUpDown {
  0% { transform: translateY(0) rotate(var(--rotation, 0deg)); }
  50% { transform: translateY(100px) rotate(var(--rotation, 0deg)); }
  100% { transform: translateY(0) rotate(var(--rotation, 0deg)); }
}

@keyframes moveSideways {
  0% { transform: translateX(0) rotate(var(--rotation, 0deg)); }
  50% { transform: translateX(100px) rotate(var(--rotation, 0deg)); }
  100% { transform: translateX(0) rotate(var(--rotation, 0deg)); }
}

@keyframes moveDiagonal {
  0% { transform: translate(0, 0) rotate(var(--rotation, 0deg)); }
  25% { transform: translate(50px, 50px) rotate(var(--rotation, 0deg)); }
  50% { transform: translate(100px, 0) rotate(var(--rotation, 0deg)); }
  75% { transform: translate(50px, -50px) rotate(var(--rotation, 0deg)); }
  100% { transform: translate(0, 0) rotate(var(--rotation, 0deg)); }
}

@keyframes pulse {
  0% { opacity: var(--base-opacity, 0.2); filter: blur(3px); }
  50% { opacity: calc(var(--base-opacity, 0.2) * 2.5); filter: blur(5px); }
  100% { opacity: var(--base-opacity, 0.2); filter: blur(3px); }
}

@keyframes glowPulse {
  0% { 
    opacity: 0.9;
    box-shadow: 0 0 20px 2px currentColor; 
  }
  50% { 
    opacity: 1;
    box-shadow: 0 0 30px 8px currentColor; 
  }
  100% { 
    opacity: 0.9;
    box-shadow: 0 0 20px 2px currentColor; 
  }
}

@keyframes growShrink {
  0% { width: var(--base-width, 150px); }
  50% { width: calc(var(--base-width, 150px) * 1.5); }
  100% { width: var(--base-width, 150px); }
}

@keyframes colorShift {
  0% { filter: hue-rotate(0deg) blur(3px); }
  50% { filter: hue-rotate(30deg) blur(5px); }
  100% { filter: hue-rotate(0deg) blur(3px); }
}

@keyframes shimmer {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: -200% 0%;
  }
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.streak {
  position: absolute;
  height: 2px;
  background: linear-gradient(90deg, transparent, currentColor, transparent);
  box-shadow: 0 0 20px currentColor;
  filter: blur(3px);
  /* Store the rotation as a CSS variable to use in animations */
  --rotation: 0deg;
}

.streak::before {
  content: '';
  position: absolute;
  top: -1px;
  left: 25%;
  right: 25%;
  height: 4px;
  background: currentColor;
  filter: blur(8px);
  opacity: 0.7;
}

.streak-1 { 
  animation: moveUpDown 15s ease-in-out infinite, pulse 8s ease-in-out infinite;
  animation-delay: 0s, 2s;
}

.streak-2 { 
  animation: moveSideways 18s ease-in-out infinite, colorShift 10s linear infinite;
  animation-delay: 2s, 0s;
}

.streak-3 { 
  animation: moveDiagonal 20s ease-in-out infinite;
  animation-delay: 1s;
}

.streak-4 { 
  animation: growShrink 14s ease-in-out infinite, pulse 7s ease-in-out infinite;
  animation-delay: 3s, 2s;
}

.streak-5 { 
  animation: moveUpDown 12s ease-in-out infinite, growShrink 16s ease-in-out infinite;
  animation-delay: 4s, 1s;
}

html, body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
}

#root {
  width: 100%;
  height: 100%;
  position: relative;
}

.animate-fadeIn {
  animation: fadeIn 0.3s ease-out forwards;
}

.bg-grid-pattern {
  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
                  linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 20px 20px;
}

.calendar-input::-webkit-calendar-picker-indicator {
  filter: invert(1);
  opacity: 0.5;
  cursor: pointer;
}

input[type="date"]:required:invalid::-webkit-datetime-edit {
  color: transparent;
}

input[type="date"]:focus::-webkit-datetime-edit {
  color: white;
}
